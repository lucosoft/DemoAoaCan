/****************************************************************************************************//**
*
* @file		board.h
* @brief	Contiene las funciones de implementacion de AOA board
* @version	1.01
* @date		15/08/2014
* @author	EA + LG
*
*
*********************************************************************************************************
*** REVISION HISTORY
*
********************************************************************************************************/


/********************************************************************************************************
*** MODULE
********************************************************************************************************/
#ifndef __BOARD_H
#define __BOARD_H


/********************************************************************************************************
*** INCLUDES
********************************************************************************************************/

#include "lpc17xx_uart.h"

/********************************************************************************************************
*** DEFINES
********************************************************************************************************/

typedef enum {
  ERR_OK = 0,
  ERR_ARGUMENT,
  ERR_TIMEOUT,
  ERR_NOT_INIT,
  ERR_CAN_SEND,
  ERR_RF_CMD_ERROR,
  ERR_RF_READ_ERROR,

} error_t;

/********************************************************************************************************
*** MACROS
********************************************************************************************************/


/********************************************************************************************************
*** DATA TYPES
********************************************************************************************************/


/********************************************************************************************************
*** PUBLIC GLOBAL VARIABLES
********************************************************************************************************/


/********************************************************************************************************
*** PUBLIC FUNCTION PROTOTYPES
********************************************************************************************************/

void console_init(void);
uint32_t console_send(uint8_t *txbuf, uint32_t buflen,
		TRANSFER_BLOCK_Type flag);
uint32_t console_sendString(uint8_t *str);
uint32_t console_receive(uint8_t *rxbuf, uint32_t buflen,
		TRANSFER_BLOCK_Type flag);

void i2c0_init(void);
void ssp1_init(void);

void trimpot_init(void);
uint16_t trimpot_get(void);
void rf_uart_init(void);

uint32_t rf_uart_send(uint8_t *txbuf, uint32_t buflen,
		TRANSFER_BLOCK_Type flag);
uint32_t rf_uart_sendString(uint8_t *str);
uint32_t rf_uart_receive(uint8_t *rxbuf, uint32_t buflen);
uint8_t rf_uart_recvIsEmpty(void);

void can1_pinConfig(void);
void can2_pinConfig(void);

void emac_pinConfig(void);


int net_init(uint8_t* ipAddr, uint8_t* mask, uint8_t* gateway);
void net_task(void);

/********************************************************************************************************
*** MODULE END
********************************************************************************************************/

#endif

